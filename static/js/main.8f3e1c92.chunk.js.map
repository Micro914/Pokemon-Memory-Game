{"version":3,"sources":["components/SingleCard.jsx","components/Popup.jsx","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","Popup","resetTurn","victory","style","display","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setVictory","setdisabled","shuffleCards","sort","Math","random","map","id","prevTurns","useEffect","prevCards","setTimeout","length","every","boolean","finishTurn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f3e1c92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SingleCard.css\";\r\n\r\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\r\n  const handleClick = () => {\r\n    if (!disabled) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className={flipped ? `flipped` : \"\"}>\r\n          <img className=\"front\" src={card.src} alt=\"Card Front\" />\r\n          <img\r\n            className=\"back\"\r\n            onClick={handleClick}\r\n            src=\"/img/cover.png\"\r\n            alt=\"Card Cover\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleCard;\r\n","import React from \"react\";\r\n\r\nimport \"./Popup.css\";\r\nconst Popup = ({ resetTurn, victory }) => {\r\n  return (\r\n    <div\r\n      className=\"popup-container\"\r\n      style={victory !== \"\" ? { display: \"flex\" } : {}}\r\n    >\r\n      <div className=\"popup\">\r\n        <h1>You won! &#x1F601;</h1>\r\n        <div className=\"image-container\">\r\n          <img src=\"/img/Caterpie.gif\" alt=\"Pokemon Gif\" />\r\n          <img src=\"/img/Bulbasur.gif\" alt=\"Pokemon Gif\" />\r\n          <img src=\"/img/Charmander.gif\" alt=\"Pokemon Gif\" />\r\n          <img src=\"/img/Pikachu.gif\" alt=\"Pokemon Gif\" />\r\n          <img src=\"/img/Psyduck.gif\" alt=\"Pokemon Gif\" />\r\n          <img src=\"/img/Squirtle.gif\" alt=\"Pokemon Gif\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={resetTurn}>Play again?</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\nimport SingleCard from \"./components/SingleCard\";\nimport \"./App.css\";\nimport Popup from \"./components/Popup\";\n\nconst cardImages = [\n  { src: \"/img/Caterpie.gif\", matched: false },\n  { src: \"/img/Charmander.gif\", matched: false },\n  { src: \"/img/Squirtle.gif\", matched: false },\n  { src: \"/img/Pikachu.gif\", matched: false },\n  { src: \"/img/Psyduck.gif\", matched: false },\n  { src: \"/img/Bulbasur.gif\", matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [victory, setVictory] = useState(false);\n  const [disabled, setdisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() * 200 }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffleCards);\n    setTurns(0);\n    setVictory(false);\n  };\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setdisabled(false);\n    setVictory(false);\n  };\n\n  const finishTurn = () => {\n    if (cards.length > 0) {\n      let x = cards.map((card) => {\n        return card.matched;\n      });\n      let Alltrue = x.every((boolean) => boolean === true);\n      if (Alltrue) {\n        return setVictory(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setdisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => {\n          return resetTurn();\n        }, 500);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  useEffect(() => {\n    finishTurn();\n  }, [cards]);\n\n  // useEffect(() => {\n\n  // }, []);\n\n  return (\n    <div className=\"app\">\n      <img className=\"title\" src=\"/img/Title.png\" alt=\"Title\" />\n      {/* <h1>Who's that Pokemon?!</h1> */}\n      <div>\n        <button onClick={shuffleCards}>New Game</button>\n      </div>\n      <div className=\"cards-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n      {victory && <Popup victory={victory} resetTurn={shuffleCards} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}